import React from 'react';
import { motion } from 'framer-motion';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { 
  Download, 
  RotateCcw, 
  Play, 
  CheckCircle,
  BrainCircuit,
  Zap,
  Shield,
  ArrowRight,
  Network,
  Cpu,
  Target
} from 'lucide-react';

interface ReplaySummaryProps {
  onNext: (page: string) => void;
  onStartAnalysis: () => void;
}

const ReplaySummary: React.FC<ReplaySummaryProps> = ({ onNext, onStartAnalysis }) => {
  
  const pipelineSteps = [
    {
      icon: <Network className="h-5 w-5" />,
      title: "GNN Detection",
      description: "Learned normal account relationships and identified suspicious network patterns",
      color: "text-quantum border-quantum/50"
    },
    {
      icon: <BrainCircuit className="h-5 w-5" />,
      title: "Perturbation Vector",
      description: "Generated 16D numerical fingerprint capturing anomaly characteristics",
      color: "text-neural border-neural/50"
    },
    {
      icon: <Zap className="h-5 w-5" />,
      title: "PCA Reduction",
      description: "Compressed to 4D while preserving key fraud-indicating patterns",
      color: "text-quantum border-quantum/50"
    },
    {
      icon: <Cpu className="h-5 w-5" />,
      title: "Quantum Enhancement",
      description: "QCL found hidden correlations, generated 2D quantum-enhanced features",
      color: "text-neural border-neural/50"
    },
    {
      icon: <Target className="h-5 w-5" />,
      title: "Hamiltonian Risk Map",
      description: "Built quantum risk landscape showing probability distributions",
      color: "text-quantum border-quantum/50"
    },
    {
      icon: <Shield className="h-5 w-5" />,
      title: "VQE Optimization",
      description: "Found optimal state, measured 79.59% account takeover probability",
      color: "text-warning border-warning/50"
    }
  ];

  const downloadSummary = () => {
    const summary = `Project Foresight - Fraud Analysis Summary
========================================

Transaction ID: TX-1001
Analysis Date: ${new Date().toLocaleDateString()}
Risk Level: MODERATE RISK - VERIFY

Key Findings:
• 79.59% probability of account takeover
• Coordinated fraud ring detected (4 transactions)
• Quantum-enhanced analysis revealed hidden patterns

Technical Details:
• GNN identified 4 suspicious accounts in coordinated cluster
• 16D perturbation vector captured anomaly fingerprint
• PCA reduced to 4D: [0.21, -0.05, 0.12, 0.03]
• QCL generated 2D quantum vector: [0.1538, 0.0358]
• Hamiltonian: H = 0.1538 * ZI + 0.0358 * IZ
• VQE energy: -0.1744

Recommendation:
Manual review required. Request OTP verification before processing.
High confidence in quantum-enhanced fraud detection results.

Generated by Project Foresight
Hybrid GNN-Quantum Fraud Detection System`;

    const blob = new Blob([summary], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = 'foresight-fraud-analysis-summary.txt';
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  return (
    <div className="container mx-auto px-4 py-8">
      <div className="max-w-4xl mx-auto space-y-8">
        
        {/* Header */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6 }}
          className="text-center space-y-4"
        >
          <h1 className="text-3xl font-bold text-foreground">Analysis Complete</h1>
          <p className="text-muted-foreground max-w-2xl mx-auto">
            Project Foresight successfully analyzed the transaction cluster using hybrid GNN-quantum methods.
          </p>
        </motion.div>

        {/* Pipeline Summary */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.2 }}
        >
          <Card className="card-quantum">
            <CardHeader>
              <CardTitle className="flex items-center space-x-2">
                <CheckCircle className="h-5 w-5 text-safe" />
                <span>Analysis Pipeline</span>
                <Badge className="bg-safe/20 text-safe border-safe/50">
                  Complete
                </Badge>
              </CardTitle>
            </CardHeader>
            <CardContent>
              <div className="grid gap-4">
                {pipelineSteps.map((step, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, x: -20 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: index * 0.1 }}
                    className={`flex items-start space-x-4 p-4 rounded-lg border ${step.color} bg-background/50`}
                  >
                    <div className={`flex-shrink-0 ${step.color.split(' ')[0]}`}>
                      {step.icon}
                    </div>
                    <div className="flex-grow">
                      <h3 className="font-semibold">{step.title}</h3>
                      <p className="text-sm text-muted-foreground mt-1">{step.description}</p>
                    </div>
                    <CheckCircle className="h-5 w-5 text-safe flex-shrink-0" />
                  </motion.div>
                ))}
              </div>
            </CardContent>
          </Card>
        </motion.div>

        {/* Key Results */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.4 }}
          className="grid md:grid-cols-3 gap-6"
        >
          <Card className="bg-gradient-to-br from-card to-background-secondary border-warning/30">
            <CardContent className="p-6 text-center">
              <Shield className="h-8 w-8 text-warning mx-auto mb-2" />
              <h3 className="font-semibold text-lg">79.59%</h3>
              <p className="text-sm text-muted-foreground">Account Takeover Risk</p>
            </CardContent>
          </Card>

          <Card className="bg-gradient-to-br from-card to-background-secondary border-quantum/30">
            <CardContent className="p-6 text-center">
              <Network className="h-8 w-8 text-quantum mx-auto mb-2" />
              <h3 className="font-semibold text-lg">4 Accounts</h3>
              <p className="text-sm text-muted-foreground">Fraud Ring Detected</p>
            </CardContent>
          </Card>

          <Card className="bg-gradient-to-br from-card to-background-secondary border-neural/30">
            <CardContent className="p-6 text-center">
              <Cpu className="h-8 w-8 text-neural mx-auto mb-2" />
              <h3 className="font-semibold text-lg">-0.1744</h3>
              <p className="text-sm text-muted-foreground">VQE Energy</p>
            </CardContent>
          </Card>
        </motion.div>

        {/* Key Achievements */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.6 }}
        >
          <Card className="bg-gradient-to-r from-quantum/10 to-neural/10 border-quantum/30">
            <CardContent className="p-6">
              <h3 className="font-semibold text-quantum mb-4">Key Achievements</h3>
              <div className="grid md:grid-cols-3 gap-4 text-sm">
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-safe flex-shrink-0" />
                  <span>Detects new fraud rings</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-safe flex-shrink-0" />
                  <span>Produces clear probability</span>
                </div>
                <div className="flex items-center space-x-2">
                  <CheckCircle className="h-4 w-4 text-safe flex-shrink-0" />
                  <span>Works without prior fraud examples</span>
                </div>
              </div>
            </CardContent>
          </Card>
        </motion.div>

        {/* Action Buttons */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.6, delay: 0.8 }}
          className="flex flex-wrap justify-center gap-4"
        >
          <Button
            onClick={() => onNext('landing')}
            variant="outline"
          >
            <RotateCcw className="h-4 w-4 mr-2" />
            Replay Demo
          </Button>
          
          <Button
            onClick={onStartAnalysis}
            variant="outline"
          >
            <Play className="h-4 w-4 mr-2" />
            Show Another Transaction
          </Button>
          
          <Button
            onClick={() => onNext('history')}
            variant="outline"
          >
            Back to History
          </Button>
          
          <Button
            onClick={downloadSummary}
            className="bg-gradient-to-r from-quantum to-neural text-white hover:opacity-90"
          >
            <Download className="h-4 w-4 mr-2" />
            Download Summary
            <ArrowRight className="h-4 w-4 ml-2" />
          </Button>
        </motion.div>
      </div>
    </div>
  );
};

export default ReplaySummary;